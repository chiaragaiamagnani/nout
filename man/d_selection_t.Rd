% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d_selection_t.R
\name{d_selection_t}
\alias{d_selection_t}
\title{d_selection_t}
\usage{
d_selection_t(
  S_Y,
  S_X,
  S = NULL,
  statistic = "T2",
  alpha = 0.1,
  n_perm = 10,
  B = 10^3,
  critical_values = NULL,
  seed = 123
)
}
\arguments{
\item{S_Y}{: test score vector}

\item{S_X}{: calibration score vector}

\item{S}{: set of selected indices in the test set on which compute the lower bound for the number of outliers}

\item{statistic}{: parameter indicating the local test to be used in closed testing procedure.
It can be either \eqn{T_2, T_3} or adjusted Fisher test}

\item{alpha}{: significance level}

\item{n_perm}{: if \eqn{min(m,n)\leq n_perm} critical values will be computed via permutation. Default value is 10}

\item{B}{: number of permutation to compute critical values. Default value is 10^3}

\item{critical_values}{: if not \code{NULL}, a vector of precomputed critical values obtained using
the permutation distribution of the test statistic}

\item{seed}{: seed to ensure reproducible results}
}
\value{
A list:
\itemize{
\item \code{lower_bound}: an integer which is the \eqn{(1 âˆ’ \alpha)}-confidence lower bound for
the number of true discoveries in the selected set \eqn{S} in closed testing procedure using the chosen local test
\item \code{S}: the selection set, i.e., the selected subset of the test indices
\item \code{global.pvalue}: the global \emph{p}-value, i.e., the \emph{p}-value that closed testing procedure uses to reject the global null
}
}
\description{
It returns the lower bound for the number of true discoveries in an arbitrary selection set \eqn{S}, which is a
subset of the test set, obtained with closed testing procedure using LMPI \eqn{T_2} (Wilcoxon-Mann-Whitney)
or LMPI \eqn{T_3} or Fisher local test.
}
\examples{
set.seed(321)
Sxy = sample(x=1:1000, size=100)
Sx = sample(Sxy, size=70); m=length(Sx)
Sy = setdiff(Sxy, Sx); n=length(Sy)
d_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)
d_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)

d_selection_t(S_Y=Sy, S_X=Sx, S=c(1:3,17), statistic="T2", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1:3,17, 7:11, 23, 21), statistic="T2", n_perm=8, alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,19), statistic="T3", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,19), statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,23,11,28,19), n_perm=6, statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,23,11,28,19), n_perm=6, statistic="T5", alpha=0.1)
}
