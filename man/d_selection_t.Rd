% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d_selection_t.R
\name{d_selection_t}
\alias{d_selection_t}
\title{d_selection_t}
\usage{
d_selection_t(
  S_Y,
  S_X,
  S = NULL,
  statistic = "T2",
  alpha = 0.1,
  n_perm = 10,
  B = 10^3,
  critical_values = NULL,
  seed = 123
)
}
\arguments{
\item{S_Y}{: test score vector}

\item{S_X}{: calibration score vector}

\item{S}{: set of selected indices in the test set on which compute the lower bound for the number of outliers}

\item{statistic}{: parameter indicating the local test to be used in closed testing procedure.
It can be either \eqn{T_2, T_3} or adjusted Fisher test}

\item{alpha}{: significance level}

\item{n_perm}{: if \eqn{min(m,n)\leq n_perm} critical values will be computed via permutation. Default value is 10}

\item{B}{: number of permutation to compute critical values. Default value is 10^3}

\item{critical_values}{: if not \code{NULL}, a vector of precomputed critical values obtained using
the permutation distribution of the test statistic}

\item{seed}{: seed to ensure reproducible results}
}
\value{
An integer which is the \eqn{(1 âˆ’ \alpha)}-confidence lower bound for
the number of true discoveries in closed testing procedure using the chosen local test.
No selection in the index test set is performed and the lower bound is computed
considering all the observations in the test set.
}
\description{
d_selection_t
}
\examples{
set.seed(321)
Sxy = sample(x=1:1000, size=100)
Sx = sample(Sxy, size=70); m=length(Sx)
Sy = setdiff(Sxy, Sx); n=length(Sy)
d_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)
d_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)

d_selection_t(S_Y=Sy, S_X=Sx, S=c(1:3,17), statistic="T2", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1:3,17, 7:11, 23, 21), statistic="T2", n_perm=8, alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,19), statistic="T3", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,19), statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, S=c(1,3,7,23,11,28,19), n_perm=6, statistic="fisher", alpha=0.1)
}
