% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d_t.R
\name{d_t}
\alias{d_t}
\title{d_t}
\usage{
d_t(
  S_Y,
  S_X,
  statistic = "T2",
  alpha = 0.1,
  n_perm = 10,
  B = 10^3,
  critical_values = NULL,
  seed = 123
)
}
\arguments{
\item{S_Y}{: test score vector}

\item{S_X}{: calibration score vector}

\item{statistic}{: parameter indicating the local test to be used in closed testing procedure.
It can be either \eqn{T_k} or adjusted Fisher test}

\item{alpha}{: significance level}

\item{n_perm}{: if \eqn{min(m,n)\leq n_{perm}} critical values will be computed via permutation. Default value is 10}

\item{B}{: number of permutation to compute critical values. Default value is 10^3}

\item{critical_values}{: if not \code{NULL}, a vector of precomputed critical values obtained using
the permutation distribution of the test statistic}

\item{seed}{: seed to ensure reproducible results}
}
\value{
A list:
\itemize{
\item \code{lower_bound}: an integer which is the \eqn{(1 âˆ’ \alpha)}-confidence lower bound for
the number of true discoveries in closed testing procedure using the chosen local test
\item \code{global.pvalue}: the global \emph{p}-value, i.e., the \emph{p}-value that closed testing procedure uses to reject the global null
}
}
\description{
It returns the lower bound for the number of true discoveries in the whole test set
obtained with closed testing procedure using LMPI \eqn{T_k} or Fisher local test.
No selection in the index test set is performed and the lower bound is computed
considering all the observations in the test set.
}
\examples{
set.seed(321)
Sxy = sample(x=1:1000, size=100)
Sx = sample(Sxy, size=70)
Sy = setdiff(Sxy, Sx)
d_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)
d_t(S_Y=Sy, S_X=Sx, statistic="T2", alpha=0.1)

d_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T3", alpha=0.1)

d_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="fisher", alpha=0.1)

d_t(S_Y=Sy, S_X=Sx, statistic="T5", alpha=0.1)
d_selection_t(S_Y=Sy, S_X=Sx, statistic="T5", alpha=0.1)


}
