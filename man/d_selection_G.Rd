% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d_selection_G.R
\name{d_selection_G}
\alias{d_selection_G}
\title{d_selection_G}
\usage{
d_selection_G(
  S_Y,
  S_X,
  S = NULL,
  g.hat = NULL,
  monotonicity = NULL,
  prop.F = 0.5,
  alpha = 0.1,
  n_perm = 10,
  B = 10^3,
  B_MC = 10^3,
  seed = 123
)
}
\arguments{
\item{S_Y}{: test score vector}

\item{S_X}{:  calibration score vector}

\item{S}{: selection set in the index test set}

\item{g.hat}{: it denotes the outlier density. If NULL it is estimated from the data}

\item{monotonicity}{: logical value indicating if the outlier density function is monotone (increasing or decreasing) or neither.}

\item{prop.F}{: proportion of inliers used to estimate the inliser distribution while estimating the outlier density.
Default value is 0.5}

\item{alpha}{: significance level}

\item{n_perm}{: minimum test sample size needed to use the asymptotic distribution of the test statistic when
local.test is either "higher" or "fisher"}

\item{B}{: number of replications to compute critical values and global \emph{p}-value. Default value is 10^3}

\item{B_MC}{: number of replications to compute the Shiraishi test statistic}

\item{seed}{: seed to ensure reproducible results}
}
\value{
A list:
\itemize{
\item \code{lower_bound}: an integer which is the \eqn{(1 âˆ’ \alpha)}-confidence lower bound for
the number of true discoveries in closed testing procedure using the chosen local test
\item \code{S}: the selection set, i.e., the selected subset of the test indices
\item \code{global.pvalue}: the global \emph{p}-value, i.e., the \emph{p}-value that closed testing procedure uses to reject the global null
\item \code{selection.pvalue}: \emph{p}-value for the selected null
}
}
\description{
d_selection_G
}
\examples{
g2 = function(x, k=2) ifelse(x<1 & x>0, k*x^(k-1), 0)
rg2 = function(rnull, k=2) max(rnull(k))

X = runif(50)
Y = replicate(50, rg2(rnull=runif))
res = d_selection_G(S_Y=Y, S_X=X, B=100)
res = d_selection_G(S_Y=Y, S_X=X, S = c(1:40), g.hat = g2, monotonicity=TRUE, B=100)
}
